# Generated by Django 4.1 on 2022-08-25 19:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agreger',
            fields=[
                ('agregat_id', models.AutoField(primary_key=True, serialize=False)),
                ('valeur', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'agreger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assignation',
            fields=[
                ('assignation_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_debut', models.DateField(blank=True, null=True)),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('actif', models.BooleanField(blank=True, null=True)),
                ('inactif', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'assignation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Axe',
            fields=[
                ('axe_id', models.AutoField(primary_key=True, serialize=False)),
                ('axe_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'axe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bloc',
            fields=[
                ('bloc_id', models.AutoField(primary_key=True, serialize=False)),
                ('bloc_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'bloc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlocEcran',
            fields=[
                ('position_id', models.AutoField(primary_key=True, serialize=False)),
                ('x', models.CharField(blank=True, max_length=100, null=True)),
                ('y', models.CharField(blank=True, max_length=100, null=True)),
                ('h', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'bloc_ecran',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ecran',
            fields=[
                ('ecran_id', models.AutoField(primary_key=True, serialize=False)),
                ('ecran_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'ecran',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Indicateur',
            fields=[
                ('indicateur_id', models.AutoField(primary_key=True, serialize=False)),
                ('indicateur_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'indicateur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemBloc',
            fields=[
                ('position_id', models.AutoField(primary_key=True, serialize=False)),
                ('x', models.CharField(blank=True, max_length=100, null=True)),
                ('y', models.CharField(blank=True, max_length=100, null=True)),
                ('h', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'item_bloc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modele',
            fields=[
                ('modele_id', models.AutoField(primary_key=True, serialize=False)),
                ('modele_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'modele',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Periode',
            fields=[
                ('periode_id', models.AutoField(primary_key=True, serialize=False)),
                ('periode_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'periode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Periodicite',
            fields=[
                ('periodicite_id', models.AutoField(primary_key=True, serialize=False)),
                ('periodicite_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'periodicite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('table_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'TABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeAxe',
            fields=[
                ('type_axe_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_axe_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'type_axe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeIndicateur',
            fields=[
                ('type_indicateur_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_indicateur_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'type_indicateur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeItem',
            fields=[
                ('type_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_item_libelle', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'type_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('utilisateur_id', models.AutoField(primary_key=True, serialize=False)),
                ('utilisateur_nom', models.CharField(blank=True, max_length=20, null=True)),
                ('utilisateur_prenom', models.CharField(blank=True, max_length=30, null=True)),
                ('utilisateur_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('utilisateur_email', models.CharField(blank=True, max_length=30, null=True)),
                ('utilisateur_fonction', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'utilisateur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Analyse',
            fields=[
                ('indicateur', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='designer.indicateur')),
            ],
            options={
                'db_table': 'ANALYSE',
                'managed': False,
            },
        ),
    ]
